HTMLEditor
	Attributes:
		doc
			Editor document object
		
		win
			Editor window object
		
		disabled
			Editor disabled state, triggers 'editingAllowedChange' event
			
		toolbar
			Supra.EditorToolbar instance
	
	Events:
		selectionChange
			Selection changed
			
		nodeChange
			Selection changed to different node
			
		editingAllowedChange
			Selection changed to editable / un-editable content
		
		change
			Fired when something in content changes, but not more often that once per second 
	
	Base:
		setHTML(html)
			Set content HTML
			
		getHTML()
			Return editor content HTML
			
		destroy()
			Destroy editor
	
	Parser (htmleditor-parser):
		uncleanHTML(html)
			Convert HTML into format browser can manipulate using execCommand()
			
		cleanHTML(html)
			Remove tags which are not allowed, convert browser created mess into normal tags
			
		stripTags(html, whiteList)
			Strip tags from HTML leaving only whitelisted tags
			whiteList - List of allowed tags. Array or comma separated list 
		
		getNodeTagName(node)
			Returns list of correct tagNames; browsers are using SPAN with style attribute to display B, EM, U, S
			Multiple styles can be set on one node, so ['B', 'EM', 'U', 'S'] can be returned for single SPAN
	
	Selection (htmleditor-selection):
		
		getSelectionPath()
			Returns path (Array) from selected element (element where selection starts) to editor container node
			
		getSelection()
			Shouldn't be used directly, use .selection property instead
			Return selection object with values:
				start - node where selection starts
				start_offset - cursor offset position relative to start node
				end - node where selection ends
				end_offset - cursor offset position relative to end node
				collapsed - selection is collapsed (there is no actual selection) or not
				
		selectNode(node)
			Select node and its contents
			
		replaceSelection(html, wrapTagName)
			Replace selection with 'html' wrapping content in tag tagName (optional)
			
		getSelectedElement()
			Returns html element in which cursor is positioned
			
		findNodesInSelection(selection, selector)
			Find nodes matching selector in selection or node in which cursor is positioned if it matches selector
			
		getSelectionText()
			Returns selected text (without HTML tags)
		
		resetSelection()
			Reset selection to nothing
	
	Editable (htmleditor-editable):
		editingAllowed
			Value indicating if current selection is editable or not
		
		disableNodeEditing(node)
			Disable editing this node
			
		enableNodeEditing(node)
			Enable editing this node
			
		isEditable(node)
			Returns true if node is editable, otherwise false
			
		isSelectionEditable(selection)
			Return true if selection is editable, otherwise false
			
		restoreEditableStates()
			Update elements for faster isEditable lookup.
			Used in setHTML
			
		navigationCharCode(charCode)
			Returns true if key with charCode doesn't change content, but is used only for navigation
	
	Commands (htmleditor-commands):
		addCommand (id, callback)
			Add command handler
			
		exec (command, data)
			Execute command
	
	Plugins (htmleditor-plugins):
		getAllPlugins ()
			Returns all plugins instances
			
		getPlugin (pluginId)
			Returns plugin by ID
		
		pluginsCleanUpNode (node)
			Revert all changes what plugin did to node
		
		addPlugin (id, properties)
			Register new plugin only for current editor instance
	
		Supra.HTMLEditor.addPlugin(ID, PROPERTIES)
			Register new plugin
	
	Data (htmleditor-data):
		getAllData()
			Returns all data
			
		getAllDataAsString()
			Returns all data encoded as JSON string
		
		setAllData(data)
			Set all content data
			
		setData(node, data)
			Associate data with node
			
		getData(node)
			Returns data which is associated with node
		
		removeData(node)
			Removes data associated with node
		
NOTES:
* node and element is not the same, node is any html node, while element is node with nodeType == 1 (HTMLElement)
* B, STRONG, EM, I, U, S are actually SPAN tags with style attribute, use getNodeTagName to retrieve tag
